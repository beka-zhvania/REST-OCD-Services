package i5.las2peer.services.ocd.algorithms;

import i5.las2peer.services.ocd.adapters.AdapterException;
import i5.las2peer.services.ocd.algorithms.utils.OcdAlgorithmException;
import i5.las2peer.services.ocd.graphs.Cover;
import i5.las2peer.services.ocd.graphs.CustomGraph;
import i5.las2peer.services.ocd.metrics.OcdMetricException;
import i5.las2peer.services.ocd.ocdatestautomation.test_interfaces.DirectedGraphTestReq;
import i5.las2peer.services.ocd.ocdatestautomation.test_interfaces.OCDAParameterTestReq;
import i5.las2peer.services.ocd.ocdatestautomation.test_interfaces.UndirectedGraphTestReq;
import i5.las2peer.services.ocd.ocdatestautomation.test_interfaces.WeightedGraphTestReq;
import i5.las2peer.services.ocd.testsUtils.OcdTestGraphFactory;

import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.fail;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class LouvainAlgorithmTest implements DirectedGraphTestReq, UndirectedGraphTestReq,
		WeightedGraphTestReq, OCDAParameterTestReq {

	OcdAlgorithm algo;

	@BeforeEach
	public void setup() {
		algo = new LouvainAlgorithm();
	}

	@Override
	public OcdAlgorithm getAlgorithm() {
		return algo;
	}

	/**
	 * Auto-Generated by ChatGPT
	 * Tests the LouvainAlgorithm on a weighted graph. Sets maxLayers to 10 to allow the algorithm to produce up to 10 layers of communities.
	 */
	@Test
	public void weightedGraphTest1() throws Exception {
		try {

			CustomGraph weightedGraph = OcdTestGraphFactory.getTwoCommunitiesWeightedGraph(); // Don't modify
			Map<String, String> parameters = new HashMap<>(); // Don't modify
			// Set maxLayers to 10
			parameters.put("maxLayers", "10");
			getAlgorithm().setParameters(parameters); // Don't modify
			Cover cover = getAlgorithm().detectOverlappingCommunities(weightedGraph); // Don't modify
			assertTrue(cover.getCommunities().size() >= 1); // Don't modify

		} catch (Throwable t) {

			fail("Test failed due to an exception or assertion error: " + t.getMessage()); // Don't modify
			throw t; // Don't modify

		}
	}

	/**
	 * Auto-Generated by ChatGPT
	 * Tests the LouvainAlgorithm on a directed graph. Sets maxLayers to 5 to allow the algorithm to produce up to 5 layers of communities, focusing on smaller community structures.
	 */
	@Test
	public void directedGraphTest1() throws Exception {
		try {

			CustomGraph directedGraph = OcdTestGraphFactory.getDirectedAperiodicTwoCommunitiesGraph(); // Don't modify
			Map<String, String> parameters = new HashMap<>(); // Don't modify
			// Set maxLayers to 5
			parameters.put("maxLayers", "5");
			getAlgorithm().setParameters(parameters); // Don't modify
			Cover cover = getAlgorithm().detectOverlappingCommunities(directedGraph); // Don't modify
			assertTrue(cover.getCommunities().size() >= 1); // Don't modify

		} catch (Throwable t) {

			fail("Test failed due to an exception or assertion error: " + t.getMessage()); // Don't modify
			throw t; // Don't modify

		}
	}

	/**
	 * Auto-Generated by ChatGPT
	 * Tests the LouvainAlgorithm on an undirected graph. Sets maxLayers to 15 to allow the algorithm to explore more complex community structures.
	 */
	@Test
	public void undirectedGraphTest1() throws Exception {
		try {

			CustomGraph undirectedGraph = OcdTestGraphFactory.getUndirectedBipartiteGraph(); // Don't modify


			Map<String, String> parameters = new HashMap<>(); // Don't modify

			// Set maxLayers to 15
			parameters.put("maxLayers", "15");

			getAlgorithm().setParameters(parameters); // Don't modify


			Cover cover = getAlgorithm().detectOverlappingCommunities(undirectedGraph); // Don't modify


			assertTrue(cover.getCommunities().size() >= 1); // Don't modify

		} catch (Throwable t) {

			fail("Test failed due to an exception or assertion error: " + t.getMessage()); // Don't modify


			throw t; // Don't modify

		}
	}

	/*
	 * Tests the algorithm on the sawmill graph
	 */
	@Disabled //TODO: remove 555
	@Test
	public void testOnSawmill() throws OcdAlgorithmException, AdapterException, FileNotFoundException, InterruptedException, OcdMetricException {
		CustomGraph graph = OcdTestGraphFactory.getSawmillGraph();
		OcdAlgorithm algo = new LouvainAlgorithm();
		Cover cover = algo.detectOverlappingCommunities(graph);
		//System.out.println(cover.toString());
	}
	
	/*
	 * Tests the algorithm on the sawmill graph with maximum layers
	 */
	@Disabled //TODO: remove 555
	@Test
	public void testOnSawmillMaxLayers() throws OcdAlgorithmException, AdapterException, FileNotFoundException, InterruptedException, OcdMetricException {
		CustomGraph graph = OcdTestGraphFactory.getSawmillGraph();
		OcdAlgorithm algo = new LouvainAlgorithm(Integer.MAX_VALUE);
		Cover cover = algo.detectOverlappingCommunities(graph);
		//System.out.println(cover.toString());
	}
}